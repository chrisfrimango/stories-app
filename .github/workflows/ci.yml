name: Run Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Cache Cypress binary
        uses: actions/cache@v3
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            cypress-${{ runner.os }}-

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      # Backend setup
      - name: Install backend dependencies
        working-directory: ./backend
        run: npm install

      - name: Run database migrations
        working-directory: ./backend
        env:
          DB_HOST: localhost
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
        run: npm run migrate

      - name: Build backend
        working-directory: ./backend
        run: npm run build

      - name: Start backend server
        working-directory: ./backend
        env:
          DB_HOST: localhost
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          PORT: 3000
        run: npm start &

      # Frontend setup
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm install

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      - name: Run Cypress component tests with coverage
        uses: cypress-io/github-action@v6
        with:
          working-directory: ./frontend
          component: true
          browser: chrome
          command: npm run cypress:coverage:component

      - name: Run Cypress E2E tests with coverage
        uses: cypress-io/github-action@v6
        with:
          working-directory: ./frontend
          browser: chrome
          start: npm run dev
          wait-on: "http://localhost:5173, http://localhost:3000"
          wait-on-timeout: 120
          command: npm run cypress:coverage

      - name: Generate coverage report
        working-directory: ./frontend
        run: npm run coverage:report

      - name: Upload test results and coverage
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: |
            frontend/cypress/videos/
            frontend/cypress/screenshots/
            frontend/coverage/
