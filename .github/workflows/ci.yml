name: Run Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-22.04

    env:
      DB_HOST: localhost
      DB_PORT: 5432
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      VITE_API_URL: "http://localhost:3000/api"
      CYPRESS_BASE_URL: "http://localhost:5173"
      NODE_ENV: test

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18.19.0"

      # Add cache for npm dependencies
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            ~/.cache/Cypress
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: |
          npm ci

      # - name: Build Frontend
      #   working-directory: ./frontend
      #   run: |
      #     npm run build -- --mode test

      - name: Install Backend Dependencies
        working-directory: ./backend
        run: |
          echo "Installing backend dependencies..."
          npm ci

      - name: Run Database Migrations
        working-directory: ./backend
        run: |
          echo "Running database migrations..."
          npm run migrate

      - name: Start Backend
        working-directory: ./backend
        run: |
          npm run dev &
          npx wait-on http://localhost:3000/api/health --timeout 30000

      - name: Run Cypress Component Tests
        uses: cypress-io/github-action@v6
        with:
          working-directory: ./frontend
          component: true
          browser: chrome
          start: npm run dev
          wait-on: "http://localhost:5173"
          wait-on-timeout: 120000
          config: >-
            {
              "retries": 2,
              "video": false,
              "screenshotOnRunFailure": true
            }
      - name: Run Cypress E2E Tests
        uses: cypress-io/github-action@v6
        with:
          working-directory: ./frontend
          browser: chrome
          start: npm run dev
          wait-on: "http://localhost:5173, http://localhost:3000/api/health"
          wait-on-timeout: 120000
          config: >-
            {
              "retries": 2,
              "video": false,
              "screenshotOnRunFailure": true
            }

      # Lägg till detta steg för att skapa .nyc_output-mappen
      - name: Setup Coverage Directory
        working-directory: ./frontend
        run: |
          mkdir -p .nyc_output
          touch .nyc_output/.gitkeep

      - name: Generate Coverage Report
        if: always()
        working-directory: ./frontend
        run: |
          if [ -d ".nyc_output" ]; then
            npm run coverage:report
          else
            echo "No coverage data found"
          fi

      - name: Upload Coverage and Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            frontend/cypress/videos/**
            frontend/cypress/screenshots/**
            frontend/coverage/**
          retention-days: 30
